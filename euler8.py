#The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.
#
#73167176531330624919225119674426574742355349194934
#96983520312774506326239578318016984801869478851843
#85861560789112949495459501737958331952853208805511
#12540698747158523863050715693290963295227443043557
#66896648950445244523161731856403098711121722383113
#62229893423380308135336276614282806444486645238749
#30358907296290491560440772390713810515859307960866
#70172427121883998797908792274921901699720888093776
#65727333001053367881220235421809751254540594752243
#52584907711670556013604839586446706324415722155397
#53697817977846174064955149290862569321978468622482
#83972241375657056057490261407972968652414535100474
#82166370484403199890008895243450658541227588666881
#16427171479924442928230863465674813919123162824586
#17866458359124566529476545682848912883142607690042
#24219022671055626321111109370544217506941658960408
#07198403850962455444362981230987879927244284909188
#84580156166097919133875499200524063689912560717606
#05886116467109405077541002256983155200055935729725
#71636269561882670428252483600823257530420752963450
#
#Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?

numbers = "73167176531330624919225119674426574742355349194934969" \
    "8352031277450632623957831801698480186947885184385861560789112949" \
    "4954595017379583319528532088055111254069874715852386305071569329" \
    "0963295227443043557668966489504452445231617318564030987111217223" \
    "8311362229893423380308135336276614282806444486645238749303589072" \
    "9629049156044077239071381051585930796086670172427121883998797908" \
    "7922749219016997208880937766572733300105336788122023542180975125" \
    "4540594752243525849077116705560136048395864467063244157221553975" \
    "3697817977846174064955149290862569321978468622482839722413756570" \
    "5605749026140797296865241453510047482166370484403199890008895243" \
    "4506585412275886668811642717147992444292823086346567481391912316" \
    "2824586178664583591245665294765456828489128831426076900422421902" \
    "2671055626321111109370544217506941658960408071984038509624554443" \
    "6298123098787992724428490918884580156166097919133875499200524063" \
    "6899125607176060588611646710940507754100225698315520005593572972" \
    "571636269561882670428252483600823257530420752963450"

def products(number, numLength):
    for i in range(0, len(number) - numLength):
        product = 1
        for i in range(i, i + numLength):
            product *= int(number[i])
        yield product

print(max(products(numbers, 13)))